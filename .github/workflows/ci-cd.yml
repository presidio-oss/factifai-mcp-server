name: CI/CD

on:
  push:
    branches: [main, release, rc]
  pull_request:
    branches: [main, release, rc]

permissions:
  contents: write
  packages: write
  checks: write
  pull-requests: write
  id-token: write
  attestations: write

jobs:
  ci-cd:
    name: CI/CD Pipeline
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # Smart fetch: full history only for releases (changelog generation), shallow for everything else
          fetch-depth: ${{ (github.event_name == 'push' && (github.ref == 'refs/heads/release' || github.ref == 'refs/heads/rc')) && 0 || 1 }}

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.2.15

      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/package.json', '**/bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install Dependencies
        run: bun install

      - name: Lint & Build (Parallel)
        run: |
          echo "🚀 Running lint and build in parallel..."
          bun run format:check &
          LINT_PID=$!
          bun run build &
          BUILD_PID=$!

          # Wait for both processes and capture exit codes
          wait $LINT_PID
          LINT_EXIT=$?
          wait $BUILD_PID  
          BUILD_EXIT=$?

          # Check if either failed
          if [ $LINT_EXIT -ne 0 ]; then
            echo "❌ Lint failed"
            exit $LINT_EXIT
          fi

          if [ $BUILD_EXIT -ne 0 ]; then
            echo "❌ Build failed"
            exit $BUILD_EXIT
          fi

          echo "✅ Lint and build completed successfully"

      - name: Attest Build Artifacts
        if: github.event_name == 'push' && (github.ref == 'refs/heads/release' || github.ref == 'refs/heads/rc')
        uses: actions/attest-build-provenance@v2
        with:
          subject-path: 'dist/*'

      - name: Release
        if: github.event_name == 'push' && (github.ref == 'refs/heads/release' || github.ref == 'refs/heads/rc')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
        run: |
          echo "🔧 Configuring git and npm..."
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          echo "//registry.npmjs.org/:_authToken=$NODE_AUTH_TOKEN" >> ~/.npmrc

          if [ "${{ github.ref }}" = "refs/heads/release" ]; then
            echo "🚀 Releasing stable version..."
            bun run release:ci
          elif [ "${{ github.ref }}" = "refs/heads/rc" ]; then
            echo "🚀 Releasing RC version..."
            bun run release:rc:ci
          fi
